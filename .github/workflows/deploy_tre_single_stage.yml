---
name: Deploy Azure TRE Single Stage
# This workflow is called by the "Deploy Azure TRE Multi Stage" workflow, and will deploy a TRE to a given environment

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      environmentName:
        description: The name of the Github Action's environment this will deploy into
        type: string
        required: true
    secrets:
      TRE_DEPLOYMENT_ACR_NAME:
        description: The name of the ACR containing the images to be brought into this environment
        required: true
      TRE_DEPLOYMENT_AZURE_CREDENTIALS:
        description: "Creds for the subscription which contains the deployment ACR"
        required: true

jobs:
  pull_devcontainer:
    name: Pull Devcontainer
    environment: ${{ inputs.environmentName }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Set up Docker BuildKit
      uses: docker/setup-buildx-action@v2
    
    - name: Azure Login to Deployment environment
      uses: azure/login@v1
      with:
        creds: ${{ secrets.TRE_DEPLOYMENT_AZURE_CREDENTIALS }}

    - name: ACR Login to Deployment ACR
      id: tre_deployment_acr_login
      run: az acr login --name "${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}"

    - name: Pull Devcontainer
      env:
        DOCKER_BUILDKIT: 1
      run: |
        set -e
        docker image pull $(TRE_DEPLOYMENT_ACR_NAME).azurecr.io/tredev:${{ github.run_id }}
  
  deploy_management:
    name: Deploy Management
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: ACR Login
        id: ci_cache_cr_login
        # will fail if this is a new env which is expected
        continue-on-error: true
        run: az acr login --name "${{ secrets.CI_CACHE_ACR_NAME }}"

    - name: Deploy management
      uses: ./.github/actions/devcontainer_run_command
      with:
        COMMAND: "make bootstrap mgmt-deploy"
        DEVCONTAINER_TAG: ${{ github.run_id }}
        CI_CACHE_ACR_NAME: ${{ secrets.CI_CACHE_ACR_NAME}}
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        TRE_ID: "${{ secrets.TRE_ID }}"
        LOCATION: ${{ secrets.LOCATION }}
        ACR_NAME: ${{ secrets.ACR_NAME }}
        TERRAFORM_STATE_CONTAINER_NAME: ${{ secrets.TERRAFORM_STATE_CONTAINER_NAME }}
        MGMT_RESOURCE_GROUP_NAME: "${{ secrets.MGMT_RESOURCE_GROUP_NAME }}"
        MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}

    - name: ACR Login
        # failure in the first attempt indicates a new ACR, so we need to try again after it's been created
        if: steps.ci_cache_cr_login.outcome != 'success'
        run: |
          # shellcheck disable=SC2034,SC2015,SC2125
          for i in {1..3}; do
            az acr login --name "${{ secrets.CI_CACHE_ACR_NAME }}" && ec=0 && break || ec=\$? && sleep 10
          done
          # shellcheck disable=SC2242
          (exit \$ec)

      - name: Start TRE
        uses: ./.github/actions/devcontainer_run_command
        with:
          COMMAND: "make tre-start"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          CI_CACHE_ACR_NAME: ${{ secrets.CI_CACHE_ACR_NAME}}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          TRE_ID: "${{ secrets.TRE_ID }}"
  
  