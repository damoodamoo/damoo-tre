---
name: Deploy Azure TRE Single Stage
# This workflow is called by the "Deploy Azure TRE Multi Stage" workflow, and will deploy a TRE to a given environment

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      environmentName:
        description: The name of the Github Action's environment this will deploy into
        type: string
        required: true
    secrets:
      SOURCE_ACR_NAME:
        description: The name of the ACR containing the images to be brought into this environment
        required: true
      SOURCE_AZURE_CREDENTIALS:
        description: "Creds for the subscription which contains the deployment ACR"
        required: true
      AZURE_CREDENTIALS:
        required: true
      TRE_ID:
        required: true
      LOCATION:
        required: true
      ACR_NAME:
        required: true
      TERRAFORM_STATE_CONTAINER_NAME:
        required: true
      MGMT_RESOURCE_GROUP_NAME:
        required: true
      MGMT_STORAGE_ACCOUNT_NAME:
        required: true
      API_CLIENT_ID:
        required: true
      AAD_TENANT_ID:
        required: true
      CORE_ADDRESS_SPACE:
        required: true
      TRE_ADDRESS_SPACE:
        required: true
      ENABLE_SWAGGER:
        required: true
      SWAGGER_UI_CLIENT_ID:
        required: true
      API_CLIENT_SECRET:
        required: true
      APPLICATION_ADMIN_CLIENT_ID:
        required: true
      APPLICATION_ADMIN_CLIENT_SECRET:
        required: true
      CORE_APP_SERVICE_PLAN_SKU:
        required: true
      RESOURCE_PROCESSOR_NUMBER_PROCESSES_PER_INSTANCE:
        required: false
      TEST_ACCOUNT_CLIENT_ID:
        required: true
      TEST_ACCOUNT_CLIENT_SECRET:
        required: true

jobs:
  deploy_management:
    name: Deploy Management
    environment: ${{ inputs.environmentName }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Deploy management
      uses: ./.github/actions/devcontainer_multi_run_command
      with:
        COMMAND: "make bootstrap mgmt-deploy"
        DEVCONTAINER_TAG: ${{ github.run_id }}
        SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
        SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        TRE_ID: "${{ secrets.TRE_ID }}"
        LOCATION: ${{ secrets.LOCATION }}
        ACR_NAME: ${{ secrets.ACR_NAME }}
        TERRAFORM_STATE_CONTAINER_NAME: ${{ secrets.TERRAFORM_STATE_CONTAINER_NAME }}
        MGMT_RESOURCE_GROUP_NAME: "${{ secrets.MGMT_RESOURCE_GROUP_NAME }}"
        MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}

  copy_bundles:
    name: Copy Bundles
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    needs: [deploy_management]
    strategy:
      matrix:
        include:
          # shared bundles
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/firewall/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/gitea/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/admin-vm/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/airlock_notifier/"}
          # other default bundles
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspaces/base"}
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspaces/airlock-import-review"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/azureml"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/gitea"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/mlflow"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/mysql"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-windowsvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-linuxvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-export-reviewvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-import-reviewvm"}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Copy bundle
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "DIR=${{ matrix.BUNDLE_DIR }} make copy-bundle-image"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          ACR_NAME: ${{ secrets.ACR_NAME }}

  copy_core_images:
    name: Copy Core Images
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    needs: [deploy_management]
    strategy:
      matrix:
        include:
          - {IMAGE_NAME: "api",
             IMAGE_VERSION_FILE: "\\${AZURETRE_HOME}/api_app/_version.py"}
          - {IMAGE_NAME: "resource-processor-vm-porter",
             IMAGE_VERSION_FILE: "\\${AZURETRE_HOME}/resource_processor/_version.py"}
          - {IMAGE_NAME: "airlock-processor",
             IMAGE_VERSION_FILE: "\\${AZURETRE_HOME}/airlock_processor/_version.py"}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Copy image
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "IMAGE_NAME=${{ matrix.IMAGE_NAME }} IMAGE_VERSION_FILE=${{ matrix.IMAGE_VERSION_FILE }} make copy-core-image"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          ACR_NAME: ${{ secrets.ACR_NAME }}

  deploy_tre:
    name: Deploy TRE
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    needs: [copy_bundles, copy_core_images]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Start TRE
      uses: ./.github/actions/devcontainer_multi_run_command
      with:
        COMMAND: "make tre-start"
        DEVCONTAINER_TAG: ${{ github.run_id }}
        SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
        SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        TRE_ID: "${{ secrets.TRE_ID }}"

    - name: Deploy TRE Core
      uses: ./.github/actions/devcontainer_multi_run_command
      with:
        COMMAND: "TF_VAR_ci_git_ref=${{ inputs.ciGitRef }} TF_LOG=${{ secrets.TF_LOG }} make deploy-core"
        DEVCONTAINER_TAG: ${{ github.run_id }}
        SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
        SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
        AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
        TRE_ID: "${{ secrets.TRE_ID }}"
        LOCATION: ${{ secrets.LOCATION }}
        ACR_NAME: ${{ secrets.ACR_NAME }}
        TERRAFORM_STATE_CONTAINER_NAME: ${{ secrets.TERRAFORM_STATE_CONTAINER_NAME }}
        MGMT_RESOURCE_GROUP_NAME: ${{ secrets.MGMT_RESOURCE_GROUP_NAME }}
        MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}
        CORE_ADDRESS_SPACE: ${{ secrets.CORE_ADDRESS_SPACE }}
        TRE_ADDRESS_SPACE: ${{ secrets.TRE_ADDRESS_SPACE }}
        ENABLE_SWAGGER: ${{ secrets.ENABLE_SWAGGER }}
        SWAGGER_UI_CLIENT_ID: "${{ secrets.SWAGGER_UI_CLIENT_ID }}"
        API_CLIENT_SECRET: "${{ secrets.API_CLIENT_SECRET }}"
        APPLICATION_ADMIN_CLIENT_ID: "${{ secrets.APPLICATION_ADMIN_CLIENT_ID }}"
        APPLICATION_ADMIN_CLIENT_SECRET: "${{ secrets.APPLICATION_ADMIN_CLIENT_SECRET }}"
        STATEFUL_RESOURCES_LOCKED: "${{ github.ref == 'refs/heads/main' && inputs.prRef == '' && true || false }}"
        CORE_APP_SERVICE_PLAN_SKU: ${{ secrets.CORE_APP_SERVICE_PLAN_SKU }}
        RESOURCE_PROCESSOR_NUMBER_PROCESSES_PER_INSTANCE: ${{ secrets.RESOURCE_PROCESSOR_NUMBER_PROCESSES_PER_INSTANCE }}

    - name: API Healthcheck
      uses: ./.github/actions/devcontainer_multi_run_command
      with:
        COMMAND: "make api-healthcheck"
        DEVCONTAINER_TAG: ${{ github.run_id }}
        SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
        SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        TRE_ID: "${{ secrets.TRE_ID }}"
        LOCATION: ${{ secrets.LOCATION }}

  register_bundles:
    name: Register Bundles
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    needs: [copy_bundles, deploy_tre]
    strategy:
      matrix:
        include:
          # shared bundles
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/firewall/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/gitea/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/admin-vm/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/airlock_notifier/"}
          # other default bundles
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspaces/base"}
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspaces/airlock-import-review"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/azureml"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/gitea"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/mlflow"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/mysql"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-windowsvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-linuxvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-export-reviewvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-import-reviewvm"}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Register bundle
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: >-
            for i in {1..3}; do make bundle-register DIR=${{ matrix.BUNDLE_DIR }}
            && ec=0 && break || ec=\$? && sleep 10; done; (exit \$ec)
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          LOCATION: "${{ secrets.LOCATION }}"
          BUNDLE_TYPE: ${{ matrix.BUNDLE_TYPE }}

  register_user_resource_bundles:
    name: Register User Resource Bundles
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    # user resource bundles need to wait for their parent resource to be registered.
    needs: [register_bundles]
    strategy:
      matrix:
        include:
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-windowsvm",
             WORKSPACE_SERVICE_NAME: "tre-service-guacamole"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-linuxvm",
             WORKSPACE_SERVICE_NAME: "tre-service-guacamole"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-export-reviewvm",
             WORKSPACE_SERVICE_NAME: "tre-service-guacamole"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-import-reviewvm",
             WORKSPACE_SERVICE_NAME: "tre-service-guacamole"}
             # Add your bundles here
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Register bundle
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: >-
            for i in {1..3}; do make bundle-register DIR=${{ matrix.BUNDLE_DIR }}
            && ec=0 && break || ec=\$? && sleep 10; done; (exit \$ec)
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          LOCATION: "${{ secrets.LOCATION }}"
          BUNDLE_TYPE: ${{ matrix.BUNDLE_TYPE }}
          WORKSPACE_SERVICE_NAME: ${{ matrix.WORKSPACE_SERVICE_NAME }}

  deploy_shared_services:
    name: Deploy Firewall
    runs-on: ubuntu-latest
    needs: [register_bundles]
    environment: ${{ inputs.environmentName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Deploy firewall
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "make deploy-shared-service DIR=\\${AZURETRE_HOME}/templates/shared_services/firewall/ BUNDLE_TYPE=shared_service"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          LOCATION: "${{ secrets.LOCATION }}"

      - name: State Store Migrations
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "make db-migrate"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          LOCATION: ${{ secrets.LOCATION }}
          TERRAFORM_STATE_CONTAINER_NAME: ${{ secrets.TERRAFORM_STATE_CONTAINER_NAME }}
          MGMT_RESOURCE_GROUP_NAME: ${{ secrets.MGMT_RESOURCE_GROUP_NAME }}
          MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}

  deploy_ui:
    name: Deploy UI
    runs-on: ubuntu-latest
    needs: [deploy_tre]
    environment: ${{ inputs.environmentName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Deploy UI
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "make build-and-deploy-ui"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          LOCATION: ${{ secrets.LOCATION }}
          TERRAFORM_STATE_CONTAINER_NAME: ${{ secrets.TERRAFORM_STATE_CONTAINER_NAME }}
          MGMT_RESOURCE_GROUP_NAME: ${{ secrets.MGMT_RESOURCE_GROUP_NAME }}
          MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}
          SWAGGER_UI_CLIENT_ID: "${{ secrets.SWAGGER_UI_CLIENT_ID }}"

  e2e_tests_smoke:
    name: "Run E2E Tests (Smoke)"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    needs: [deploy_shared_services, register_bundles, deploy_ui]
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run E2E Tests (Smoke)
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "make test-e2e-smoke"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          LOCATION: "${{ secrets.LOCATION }}"
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_WORKSPACE_APP_ID: "${{ secrets.TEST_WORKSPACE_APP_ID }}"
          TEST_WORKSPACE_APP_SECRET: "${{ secrets.TEST_WORKSPACE_APP_SECRET }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          IS_API_SECURED: false
          WORKSPACE_APP_SERVICE_PLAN_SKU: ${{ secrets.WORKSPACE_APP_SERVICE_PLAN_SKU }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: E2E Test (Smoke) Results
          path: "./e2e_tests/pytest_e2e_smoke.xml"

  e2e_tests_custom:
    name: "Run E2E Tests"
    if: ${{ inputs.e2eTestsCustomSelector != '' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    needs: [deploy_shared_services, register_bundles, register_user_resource_bundles]
    timeout-minutes: 240
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run E2E Tests
        uses: ./.github/actions/devcontainer_multi_run_command
        with:
          COMMAND: "make test-e2e-custom SELECTOR='${{ inputs.e2eTestsCustomSelector }}'"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          SOURCE_ACR_NAME: ${{ secrets.SOURCE_ACR_NAME}}
          SOURCE_AZURE_CREDENTIALS: ${{ secrets.SOURCE_AZURE_CREDENTIALS }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          LOCATION: "${{ secrets.LOCATION }}"
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_WORKSPACE_APP_ID: "${{ secrets.TEST_WORKSPACE_APP_ID }}"
          TEST_WORKSPACE_APP_SECRET: "${{ secrets.TEST_WORKSPACE_APP_SECRET }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          IS_API_SECURED: false
          WORKSPACE_APP_SERVICE_PLAN_SKU: ${{ secrets.WORKSPACE_APP_SERVICE_PLAN_SKU }}
          E2E_TESTS_NUMBER_PROCESSES: ${{ inputs.E2E_TESTS_NUMBER_PROCESSES }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: E2E Test Results
          path: "./e2e_tests/pytest_e2e_custom.xml"

  summary:
    name: Summary
    needs: [e2e_tests_smoke, e2e_tests_custom]
    runs-on: ubuntu-latest
    if: always()
    environment: ${{ inputs.environmentName }}
    steps:
      - uses: technote-space/workflow-conclusion-action@v3

      # For PR builds triggered from comment builds, the GITHUB_REF is set to main
      # so the checks aren't automatically associated with the PR
      # If prHeadSha is specified then explicity mark the checks for that SHA
      - name: Report check status
        if: inputs.prHeadSha != ''
        uses: LouisBrunner/checks-action@v1.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # the name must be identical to the one received by the real job
          sha: ${{ inputs.prHeadSha }}
          name: "Deploy PR / Run E2E Tests (Smoke)"
          status: "completed"
          conclusion: ${{ env.WORKFLOW_CONCLUSION }}
          details_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish E2E Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          junit_files: "artifacts/**/*.xml"
          check_name: "E2E Test Results"

