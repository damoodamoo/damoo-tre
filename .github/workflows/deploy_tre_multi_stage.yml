---
name: Deploy Azure TRE Multi Stage
# This workflow is manually triggered, and will deploy the TRE against a dev and a prod environment

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:

# This will prevent multiple runs of this entire workflow.
# We should NOT cancel in progress runs as that can destabilize the environment.
concurrency: "${{ github.workflow }}-${{ github.ref }}"

# TODO: bootstrap a new ACR. Using a manual one for now. 

jobs:
  build_devcontainer:
    name: Build Devcontainer
    environment: multi
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Set up Docker BuildKit
      uses: docker/setup-buildx-action@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.TRE_DEPLOYMENT_AZURE_CREDENTIALS }}

    - name: ACR Login
      id: tre_deployment_acr_login
      run: az acr login --name "${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}"

    - name: Build new devcontainer
      env:
        DOCKER_BUILDKIT: 1
      run: |
        set -e

        USER_UID=$(id -u)
        USER_GID=$(id -g)
        TRE_DEPLOYMENT_ACR=${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}.azurecr.io

        docker_cache=()
        docker_cache+=(--cache-from "$TRE_DEPLOYMENT_ACR/tredev:${{ github.run_id }}")
        docker_cache+=(--cache-from "$TRE_DEPLOYMENT_ACR/tredev:latest")

        docker build . "${docker_cache[@]}" \
          -t "tredev:${{ github.run_id }}" -f ".devcontainer/Dockerfile" \
          --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg USER_UID="${USER_UID}" --build-arg USER_GID="${USER_GID}"

        docker image tag tredev:${{ github.run_id }} \
          $TRE_DEPLOYMENT_ACR/tredev:${{ github.run_id }}

        docker image push $TRE_DEPLOYMENT_ACR/tredev:${{ github.run_id }}

  build_core_images:
    # used to build images used by core infrastructure
    name: Build Core Docker Images
    runs-on: ubuntu-latest
    environment: multi
    needs: [build_devcontainer]
    strategy:
      fail-fast: true
      matrix:
        target: [build-and-push-api, build-and-push-resource-processor, build-and-push-airlock-processor]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Docker build
        uses: ./.github/actions/devcontainer_run_command
        with:
          COMMAND: "make ${{ matrix.target }}"
          DEVCONTAINER_TAG: ${{ github.run_id }}
          CI_CACHE_ACR_NAME: ${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}
          AZURE_CREDENTIALS: ${{ secrets.TRE_DEPLOYMENT_AZURE_CREDENTIALS }}
          ACR_NAME: ${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}

  publish_bundles:
    name: Publish Bundles
    runs-on: ubuntu-latest
    needs: [build_devcontainer]
    strategy:
      matrix:
        include:
          # shared bundles
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/firewall/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/gitea/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/admin-vm/"}
          - {BUNDLE_TYPE: "shared_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/shared_services/airlock_notifier/"}
          # other default bundles
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspaces/base"}
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspaces/airlock-import-review"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/azureml"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/gitea"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/mlflow"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/mysql"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-windowsvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-linuxvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-export-reviewvm"}
          - {BUNDLE_TYPE: "user_resource",
             BUNDLE_DIR: "\\${AZURETRE_HOME}/templates/workspace_services/guacamole/user_resources/guacamole-azure-import-reviewvm"}
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Publish bundle
        uses: ./.github/actions/devcontainer_run_command
        with:
          # Although porter publish will build automatically, our makefile build target includes logic that should run
          COMMAND: >-
            for i in {1..3}; do make bundle-build bundle-publish DIR=${{ matrix.BUNDLE_DIR }}
            && ec=0 && break || ec=\$? && sleep 30; done; (exit \$ec)
          DEVCONTAINER_TAG: ${{ github.run_id }}
          AZURE_CREDENTIALS: ${{ secrets.TRE_DEPLOYMENT_AZURE_CREDENTIALS }}
          CI_CACHE_ACR_NAME: ${{ secrets.TRE_DEPLOYMENT_ACR_NAME}}
          ACR_NAME: ${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}
  
  deploy-dev:
    name: "Deploy Dev"
    uses: ./.github/workflows/deploy_tre_single_stage.yml
    needs: [build_devcontainer, build_core_images, publish_bundles]
    with:
      environmentName: dev
    secrets:
      TRE_DEPLOYMENT_ACR_NAME: ${{ secrets.TRE_DEPLOYMENT_ACR_NAME }}
      TRE_DEPLOYMENT_AZURE_CREDENTIALS: ${{ secrets.TRE_DEPLOYMENT_AZURE_CREDENTIALS }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      CI_CACHE_ACR_NAME: ${{ secrets.CI_CACHE_ACR_NAME }}
      TRE_ID: ${{ secrets.TRE_ID }}
      LOCATION: ${{ secrets.LOCATION }}
      ACR_NAME: ${{ secrets.ACR_NAME }}
      TERRAFORM_STATE_CONTAINER_NAME: ${{ secrets.TERRAFORM_STATE_CONTAINER_NAME }}
      MGMT_RESOURCE_GROUP_NAME: ${{ secrets.MGMT_RESOURCE_GROUP_NAME }}
      MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}
  